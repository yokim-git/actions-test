# Repository의 Actions 탭에 나타날 Workflow 이름
name: CI/CD to github actions

# Workflow를 실행시키기 위한 Event 목록
on:
  # 하단 코드에 따라 특정 이벤트가 발생한 경우에 Workflow가 실행
  push:
    branches: 
      - "main"

# 해당 Workflow의 하나 이상의 Job 목록
jobs:
  # Job 이름으로, cicd라는 이름으로 Job이 표시
  cicd:
    # Runner가 실행되는 환경을 정의하는 부분 (여기선 Ubuntu 사용)
    runs-on: ubuntu-latest
    # build Job 내의 step 목록
    steps:
      # uses 키워드를 통해 Action을 불러올 수 있음
      # 여기에서는 해당 레포지토리로 check-out하여 접근할 수 있는 Action을 사용
      - uses: actions/checkout@v2
      # 실행되는 커맨드, 서버 시간을 Seoul로 맞춰주고 Docker Hub 이미지 태그를 시간으로 설정
      - name: Set Tag name
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "TAGS=`date +%H%M%S`" >> $GITHUB_ENV
          echo "VERSION=blue" >> $GITHUB_ENV

      # docker hub 로그인, 변수는 github Settings 페이지에서 설정 가능
      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      # Docker Image 빌드 및 푸쉬 단계
      #- name: Build the Docker image
      #  run: docker build . --file ./Dockerfile --tag yokimhub/node:${{ env.TAGS }}

      #- name: Docker Push
      #  run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node:${{ env.TAGS }}
      - name: Pull and Push
        run: |
          docker pull argoproj/rollouts-demo:${{ env.VERSION }}
          docker image tag argoproj/rollouts-demo:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/rollouts-demo:${{ env.TAGS }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rollouts-demo:${{ env.TAGS }}

      # 빌드된 도커 이미지를 ArgoCD 에 적용하기 위해 kubernetes rollout object 수정
      - name: deploy
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_PASSWORD: ${{ secrets.GIT_USER_PASSWORD }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git clone https://$GIT_USER_NAME:$GIT_USER_PASSWORD@github.com/yokim-git/helm.git && cd helm/test_resources
          git config --global user.email $GIT_USER_EMAIL; git config --global user.name $GIT_USER_NAME ; git config --global push.default matching
          sed -i 's/version:.*/version: ${{ env.TAGS }}/g' values.yaml
          if [ -z "$(git status --porcelain)" ]; \
            then \
              echo "nothing to commit, working directory clean"; \
            else \
              git commit -am "actions test"  && git push; \
            fi
